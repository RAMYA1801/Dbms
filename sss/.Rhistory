knitr::opts_chunk$set(echo = TRUE, out.width="75%", fig.align="center")
options(scipen = 1, digits = 3)
flights |>
filter(year==2013,month==9,day==20)
flights |>
filter(year==2013, month==9,day==20)
```{r}
flight |>
filter(dep_delay>=2*60)
flights |>
filter(dep_delay>=2*60)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
flights |>
filter(dep_delay>=2*60) |> select(dep_delay)
flights |>
filter(year==2013, month==9,day==20)
flights |>
filter(dep_delay <= 0, arr_delay > 120)
flights
flights |> select(contains("dep"))
flights |> select(contains("dep"))
dep_hour
mintes=reminder(dept_delay%100)
flights |> select(contains("dep"))
dep_hour <- dep_time%%100
flights |> select(contains("dep"))
dep_hour <- dep_time%/%100
flights |> select(contains("dep"))
dep_hour <- dep_time %/% 100
install.packages("dplyr")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE, out.width="75%", fig.align="center")
options(scipen = 1, digits = 3)
flights |> select(contains("dep"))
library(nycflights13)
flights
flights |> select(contains("dep"))
dep_hour <- dep_time %/% 100
flights |> select(contains("dep"))
dep_hour <- dep_time %/% 100
flights |> select(contains("dep"))
sched_dep_hour <- sched_dep_hour%%100
sched_dep_hour <- sched_dep_hour%%100
flights |> select(contains("dep"))
mutate(dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |> select(contains("dep"))
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |> select(contains("dep")) |>
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |> select(contains("dep")) %>%
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |> select(contains("dep")) %>%
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
head(flights)
depart <- flights |> select(contains("dep")) %>%
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
head(depart)
install.packages("tibble")
knitr::opts_chunk$set(echo = TRUE, out.width="75%", fig.align="center")
options(scipen = 1, digits = 3)
depart <- flights |> select(contains("dep")) %>%
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
depart <- flights |> select(contains("dep")) |>
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
depart <- flights |>
select(contains("dep")) |>
tibble(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
library(tibble)
depart <- flights |>
select(contains("dep")) |>
tibble(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
depart <- flights |>
select(contains("dep")) |>
tibble(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |>
select(contains("dep")) |>
tibble(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100)
flights |>
select(contains("dep")) |>
tibble(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100
)
flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_mt = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_mt = sched_dep_time %% 100
)
library(tidyverse)
library(nycflights13)
nycflights13
library(tibble)
flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_mt = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_mt = sched_dep_time %% 100
)
flights |>
select(contains("dep")) |>
mutate(
dep_hour <- dep_time %/% 100,
dep_mt <- dep_time %% 100,
sched_dep_hour <- sched_dep_time %/% 100,
sched_dep_mt <- sched_dep_time %% 100
) |>
mutate(dep_delay2 = (dep_hour - sched_dep_hour) * 60 + (dep_mt sched_dep_mt)) |>
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = (dep_delay >= 20))
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = mean(dep_delay >= 20))
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = (dep_delay >= 20))
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = mean(dep_delay >= 20))
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = (dep_delay >= 20))
flights |>
filter(dep_delay <= 0, arr_delay > 120) |> select(dep_time)
flights |> arrange(distance)
flights |> arrange(distance) |> select(distance)
flights |> arrange(desc(distance) |> select(distance)
flights |> arrange(desc(distance) )
flights |> arrange(desc(distance) ) |> select(distance)
flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_mt = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_mt = sched_dep_time %% 100
)
depart<-flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_min = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_min = sched_dep_time %% 100
)
depart<-flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_min = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_min = sched_dep_time %% 100
)
library(dplyr)
library(tibble)
depart<-flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_min = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_min = sched_dep_time %% 100
)
library(dplyr)
library(tibble)
depart<-flights |>
select(contains("dep")) |>
mutate(
dep_hour = dep_time %/% 100,
dep_min = dep_time %% 100,
sched_dep_hour = sched_dep_time %/% 100,
sched_dep_min = sched_dep_time %% 100
)
head(depart)
depart |>mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2))
depart |> mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2))
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
depart |> mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2))
depart |> mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2)
)
depart |> mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2)
)
depart |> mutate(
dep_delay2 = ((dep_hour-sched_dep_hour) * 60 + (dep_min-sched_dep_min)) |>
relocate(dep_delay, dep_delay2)
)
# Calculate departure delay using dep_hour, dep_min, sched_dep_hour, and sched_dep_min
depart <- depart %>%
mutate(
dep_delay2 = ((dep_hour * 60 + dep_min) - (sched_dep_hour * 60 + sched_dep_min))
) %>%
relocate(dep_delay2) # Move dep_delay2 for easier comparison
# Verify the result
discrepancies <- depart %>%
filter(dep_delay != dep_delay2)
# Display discrepancies
head(discrepancies)
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2)
depart2
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
dep_delay2
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2)
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
)
head(dep_delay2)
depart<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
)
head(depart)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
)
head(dep_delay2)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
)
head(dep_delay2)
|>
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2) |> select(depart,depart2,dep_delay2,dep_time)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2) |> select(depart,depart2,dep_time)
dep_delay2<- depart |>
mutate(
dep_delay2 = ((dep_hour+sched_dep_hour)* 60 + ( dep_min - sched_dep_min))
) |>
relocate(dep_delay2)
depart2<-depart |>
filter(dep_delay!=dep_delay2)
head(depart2)
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = (dep_delay >= 20))
flights |> select(tailnum, dep_delay, month, day) |>
arrange(tailnum) |> mutate(late20 = (dep_delay >= 20))
flights |>
filter(!is.na(dep_delay)) |>
group_by(tailnum) |>
summarise(prop_late20=mean(dep_delay>=20))
library(dplyr)
# Assuming you have a data frame named 'flights' with a 'dest' column indicating destinations
# and a 'carrier' column indicating carriers
# Group the data by 'dest' and count the distinct carriers for each destination
destination_counts <- flights %>%
group_by(dest) %>%
summarize(carrier_count = n_distinct(carrier))
# Filter destinations with at least two carriers
destinations_with_multiple_carriers <- destination_counts %>%
filter(carrier_count >= 2)
# List of destinations with at least two carriers
multiple_carrier_destinations <- destinations_with_multiple_carriers$dest
# Print or view the list of destinations
multiple_carrier_destinations
library(tidyverse)
library(nycflights13)
flights |>
filter(origin=="JFK",month==9)
?dplyr
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries (if not already installed)
# Install these packages if you haven't already
# install.packages("dplyr")
# install.packages("lubridate")
library(dplyr)
library(lubridate)
# Assuming your data is in a dataframe called flights_data
# Make sure the flight_date column is in a date format
flights_data$flight_date <- as.Date(flights_data$flight_date)
?dplyr
# Load required libraries (if not already installed)
# Install these packages if you haven't already
# install.packages("dplyr")
# install.packages("lubridate")
library(dplyr)
library(lubridate)
# Assuming your data is in a dataframe called flights_data
# Make sure the flight_date column is in a date format
flights_data$flight_date <- as.Date(flights_data$flight_date)
library(dplyr)
?dplyr
flights |>
filter(origin=="JFK",month==9) |> avgarr = avg(arr_delay)
?dplyr
flights |>
filter(origin=="JFK",month==9) |>
avgarr = avg(arr_delay)
?dplyr
flights |>
filter(origin=="JFK",month==9) |>
avg(arr_delay)
?dplyr
flights |>
filter(origin=="JFK",month==9) |>
arr_delay
countori<-count(flights$origin="JFK")
# Assuming your data frame is named flights_data with an 'origin' column
# Use the table function to count the number of trips for each origin
origin_counts <- table(flights_data$origin)
# Assuming your data frame is named flights_data with an 'origin' column
# Use the table function to count the number of trips for each origin
origin_counts <- table(flights$origin)
library(tidyverse)
library(nycflights13)
flights |>
filter(origin=="JFK",month==9)
?dplyr
flights |>
filter(origin=="JFK",month==9) |>
arr_delay
flights
flights
count(flights)
flights
count(flights) where origin=="jfk"
if origin=="JFK"{
